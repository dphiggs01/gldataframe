/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Groovy library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'base'
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'

}

base {
    version = '0.1.2'
    archivesName = rootProject.name
    group = 'io.github.dphiggs01'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    //Groovy version that is being used by Fiji
    implementation 'org.codehaus.groovy:groovy:3.0.4'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation libs.spock.core
    testImplementation libs.junit

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3
}

test {
	useJUnitPlatform()
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

java {
   withJavadocJar()
   withSourcesJar()
}

publishing {
    
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = rootProject.name
            version = project.version
            from components.java

            pom {
               name = 'GLDataframe'
               description = 'GLDataframe is a Groovy Lite implemenation of a Dataframe'
               url = 'https://github.com/dphiggs01/gldataframe'
               inceptionYear = '2024'

               licenses {
                   license {
                       name = 'MIT License'
                       url = 'http://www.opensource.org/licenses/mit-license.php'
                   }
               }
               developers {
                   developer {
                       id = 'danhiggins'
                       name = 'Dan Higgins'
                       email = 'daniel.higgins@yahoo.com'
                   }
               }
               scm {
                   connection = 'scm:git:git:github.com/dphiggs01/gldataframe.git'
                   developerConnection = 'scm:git:ssh://github.com/dphiggs01/gldataframe.git'
                   url = 'https://github.com/dphiggs01/gldataframe'
               }
           }
        }
    }

    repositories {
         maven {
            url = uri('./repository')
    //         name = "central"
    //         url = "https://central.sonatype.com/service/local/staging/deploy/maven2/"
    //         credentials {
    //             username = project.properties['ossrhUsername'] 
    //             password = project.properties['ossrhPassword']
    //         }
         }
     }
}




tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name,
                   'Implementation-Version': project.version)
    }
}

signing {
   sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
